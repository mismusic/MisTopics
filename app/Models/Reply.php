<?php

namespace App\Models;

use App\Observers\ReplyObserver;
use Carbon\Carbon;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Support\Arr;
use DateTimeInterface;

class Reply extends Model
{

    use SoftDeletes;

    protected $fillable = [
        'pid', 'content', 'user_id', 'topic_id',
    ];

    // 更新父模型时间戳
    protected $touches = [
        'topic',
    ];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::observe(ReplyObserver::class);
    }

    /**
     * Prepare a date for array / JSON serialization.
     *
     * @param  \DateTimeInterface  $date
     * @return string
     */
    protected function serializeDate(DateTimeInterface $date)
    {
        return Carbon::instance($date)->from();
    }

    public function scopeOrder(Builder $builder)
    {
        $builder->orderBy('created_at', 'desc');
    }

    public function except($attributes) :array
    {
        $attributes = is_array($attributes) ? $attributes : func_get_args();
        $result = Arr::except($this->getAttributes(), $attributes);
        return $result;
    }

    // 关联关系
    // ----用户关联表，反向一对一的关系
    public function user()
    {
        return $this->belongsTo(User::class, 'user_id', 'id');
    }

    // ----主题关联表，反向一对一的关系
    public function topic()
    {
        return $this->belongsTo(Topic::class);
    }


}
